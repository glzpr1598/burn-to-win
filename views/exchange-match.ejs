<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="apple-touch-icon" href="/image/btw-tran-180x180.png"/>
    <link rel="icon" type="image/png" href="/image/btw-tran-180x180.png"/>
    <link rel="stylesheet" href="/css/common.css" />
    <title>교류전</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
</head>
<body>
    <div class="app-container">
        <div class="d-flex align-items-center justify-content-between sticky-header">
            <div class="d-flex align-items-center">
                <img src="/image/btw-tran-180x180.png" alt="로고" style="height: 40px; margin-right: 5px;">
                <h5 style="margin-bottom: 0;"><b>교류전</b></h5>
            </div>
            <div class="d-flex align-items-center">
                <select id="exMatchSelector" class="form-select form-select-sm me-2" style="width:auto;">
                    <option value="" disabled selected hidden>대회 선택</option>
                </select>
                <i class="bi bi-list hamburger-icon"></i>
            </div>
        </div>

        <!-- 사이드 메뉴 -->
        <%- include('partials/sidemenu') %>

        <div class="p-3">
            <h3>대진표</h3>
            <div id="matchDetailArea" class="mt-3"></div>
        </div>
        <div class="p-3">
            <h3>개인 성적</h3>
            <p>여기에 내용을 채워나가면 됩니다.</p>
        </div>
        <div class="p-3">
            <h3>촬영 담당자</h3>
            <p>여기에 내용을 채워나가면 됩니다.</p>
        </div>

        <%- include('partials/navbar', { currentPage: 'exchange' }) %>
    </div>

    <!-- 수정 모달 -->
    <div class="modal fade" id="editMatchModal" tabindex="-1" aria-labelledby="editMatchModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editMatchModalLabel">경기 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                </div>
                <div class="modal-body">
                    <form id="editMatchForm">
                        <input type="hidden" id="edit_masterId">
                        <input type="hidden" id="edit_courtNum">
                        <input type="hidden" id="edit_matchRound">
                        <div class="mb-2">
                            <label class="form-label">듀스</label>
                            <input type="text" class="form-control" id="edit_deuce">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">AD</label>
                            <input type="text" class="form-control" id="edit_ad">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">내 점수</label>
                            <input type="number" class="form-control" id="edit_myScore">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">상대 점수</label>
                            <input type="number" class="form-control" id="edit_opScore">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                    <button type="button" class="btn btn-primary" onclick="saveMatchEdit()">저장</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const hamburger = document.querySelector('.hamburger-icon');
            const sideMenu = document.querySelector('.side-menu');
            const overlay = document.querySelector('.overlay');
            if (hamburger) {
                hamburger.addEventListener('click', () => {
                    sideMenu.classList.toggle('active');
                    overlay.classList.toggle('active');
                });
            }
            if (overlay) {
                overlay.addEventListener('click', () => {
                    sideMenu.classList.remove('active');
                    overlay.classList.remove('active');
                });
            }

            // 콤보박스 초기화
            fetch('/api/exchange-match')
                .then(res => res.json())
                .then(data => {
                    const selector = document.getElementById('exMatchSelector');
                    data.forEach(item => {
                        const option = document.createElement('option');
                        option.value = item.id;
                        option.textContent = item.label;
                        selector.appendChild(option);
                    });

                    // 로컬스토리지에 선택 값이 있으면 복원
                    const savedId = localStorage.getItem('selectedMatchMasterId');
                    if (savedId) {
                        selector.value = savedId;
                        // 선택 값으로 화면도 바로 표시
                        fetch(`/api/exchange-match/${savedId}`)
                            .then(res => res.json())
                            .then(data => {
                                renderMatchDetail(data, savedId);
                            })
                            .catch(err => console.error(err));
                    }
                })
                .catch(err => console.error('콤보박스 데이터 실패:', err));
        });

        document.getElementById('exMatchSelector').addEventListener('change', function(e) {
            const selectedId = e.target.value;
            if (selectedId) {
                // 선택된 ID를 localStorage에 저장
                localStorage.setItem('selectedMatchMasterId', selectedId);

                fetch(`/api/exchange-match/${selectedId}`)
                    .then(res => res.json())
                    .then(data => {
                        renderMatchDetail(data, selectedId);
                    })
                    .catch(err => {
                        console.error('상세데이터 로드 실패:', err);
                    });
            }
        });

        function renderMatchDetail(data, matchMasterId) {
            const target = document.getElementById('matchDetailArea');
            target.innerHTML = '';

            if (!data || data.length === 0) {
                target.textContent = '세부 경기 데이터가 없습니다.';
                return;
            }

            const grouped = {};
            data.forEach(item => {
                const round = item.match_round;
                if (!grouped[round]) grouped[round] = {};
                grouped[round][item.court_num] = item;
            });

            const courts = [...new Set(data.map(item => item.court_num))].sort((a,b) => a-b);

            let html = `
                <div class="table-responsive" style="max-height:500px; overflow-y:auto;">
                <table class="table table-sm table-bordered text-center align-middle" style="font-size:0.8rem;">
                    <colgroup>
                        <col style="width:80px;">
                        ${courts.map(() => `<col style="width:150px;">`).join('')}
                    </colgroup>
                    <thead class="table-light">
                        <tr>
                            <th>라운드</th>
                            ${courts.map(c => `<th>${c}코트</th>`).join('')}
                        </tr>
                    </thead>
                    <tbody>
            `;

            Object.keys(grouped).sort((a,b) => a - b).forEach(round => {
                html += `<tr><td>${round}R</td>`;
                courts.forEach(court => {
                    const match = grouped[round][court];
                    if (match) {
                        const playerName = (match.deuce_player || match.ad_player)
                            ? `${match.deuce_player || ''}${match.ad_player ? '/' + match.ad_player : ''}`
                            : '';
                        const matchType = match.match_type || '';
                        const score = ((match.my_team_score != null && match.op_team_score != null)&&
                                       (match.my_team_score != 0 && match.op_team_score != 0))
                            ? `${match.my_team_score}:${match.op_team_score}`
                            : '';
                        const result = match.match_result || '';

                        let bgColor = "";
                        if (result === '승') bgColor = ' style="background-color:#ffe5e5;"';
                        else if (result === '패') bgColor = ' style="background-color:#e5f0ff;"';

                        let cellHtml = "";
                        if (playerName) cellHtml += playerName + ((match.my_team_score != 0 && match.op_team_score != 0)? "<br>" : "&nbsp;");
                        if (matchType) cellHtml += matchType;
                        if (score || result) cellHtml += `&nbsp;${score}&nbsp;`;

                        cellHtml += `
                            <button class="btn btn-sm border-0 p-0"
                                onclick="editMatch(${matchMasterId}, ${match.court_num}, ${match.match_round})">
                                <i class="bi bi-pencil-square text-primary"></i>
                            </button>
                        `;

                        html += `<td${bgColor}>${cellHtml}</td>`;
                    } else {
                        html += `<td>
                            <button class="btn btn-sm border-0 p-0"
                                onclick="editMatch(${matchMasterId}, ${court}, ${round})">
                                <i class="bi bi-pencil-square text-primary"></i>
                            </button>
                        </td>`;
                    }
                });
                html += `</tr>`;
            });

            html += `</tbody></table></div>`;
            target.innerHTML = html;
        }

        const editModal = new bootstrap.Modal(document.getElementById('editMatchModal'));

        function editMatch(masterId, courtNum, matchRound) {
            console.log("수정 클릭", masterId, courtNum, matchRound);
            document.getElementById('edit_masterId').value = masterId;
            document.getElementById('edit_courtNum').value = courtNum;
            document.getElementById('edit_matchRound').value = matchRound;

            fetch(`/api/exchange-match/detail?masterId=${masterId}&courtNum=${courtNum}&matchRound=${matchRound}`)
                .then(res => res.json())
                .then(data => {
                    document.getElementById('edit_deuce').value = data.deuce_player || "";
                    document.getElementById('edit_ad').value = data.ad_player || "";
                    document.getElementById('edit_myScore').value = data.my_team_score ?? "";
                    document.getElementById('edit_opScore').value = data.op_team_score ?? "";
                    editModal.show();
                })
                .catch(err => {
                    console.error('데이터 로드 실패', err);
                    alert('데이터를 불러오지 못했습니다.');
                });
        }

        function saveMatchEdit() {
            const masterId = document.getElementById('edit_masterId').value;
            const courtNum = document.getElementById('edit_courtNum').value;
            const matchRound = document.getElementById('edit_matchRound').value;

            const payload = {
                deuce_player: document.getElementById('edit_deuce').value,
                ad_player: document.getElementById('edit_ad').value,
                my_team_score: document.getElementById('edit_myScore').value,
                op_team_score: document.getElementById('edit_opScore').value,
            };

            fetch(`/api/exchange-match/detail`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    ...payload,
                    masterId,
                    courtNum,
                    matchRound
                })
            })
            .then(res => res.json())
            .then(result => {
                if (result.success) {
                    alert('수정되었습니다.');
                    editModal.hide();
                    document.getElementById('exMatchSelector').dispatchEvent(new Event('change'));
                } else {
                    alert('수정 실패');
                }
            })
            .catch(err => {
                console.error('수정 오류', err);
                alert('수정 오류');
            });
        }
    </script>
</body>
</html>
